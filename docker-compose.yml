version: "3.7"

services:
  postgres:
    image: postgres:14
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=transactions

  zookeeper:
    image: confluentinc/cp-zookeeper:5.5.3
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
  kafka:
    image: confluentinc/cp-enterprise-kafka:5.5.3
    depends_on: [zookeeper]
    environment:
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:29092,PLAINTEXT_HOST://0.0.0.0:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9991
    ports:
      - 9092:9092


  antifraud:
    build:
      context: .
      dockerfile: apps/antifraud/Dockerfile
    environment:
      - DB_PROVIDER=postgresql
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/transactions
      - KAFKA_BROKER=kafka:29092      
      - KAFKA_CONSUMER_GROUP=antifraud-consumer
      - KAFKA_TOPIC=transaction-created
    depends_on:
      - kafka
      - postgres
      
  transaction:
    build:
      context: .
      dockerfile: apps/transaction/Dockerfile
    environment:
      - NODE_ENV=production
      - DB_PROVIDER=postgresql
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/transactions
      - KAFKA_BROKER=kafka:29092
    depends_on:
      - kafka
      - postgres
    ports:
      - "3000:3000"
    command: sh -c "npx prisma generate --schema=./prisma/schema.prisma && npx prisma migrate deploy --schema=./prisma/schema.prisma && npm run start"
   
volumes:
  pgdata:
